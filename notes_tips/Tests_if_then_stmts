Tests
-----

Syntax:
[ condition-to-test-for ]
 > returns true is the test.
 >> exits with a status of 0 if true...
  beginning of if then elseif fi stmts.

Example:
[ -e /etc/passwd ]

 operators (tests)
-d FILE   True if file is a directory.
-e FILE   True if file exists.
-f FILE   True if file exists and is a regular file.
-r FILE   True if file is readable by you.
-s FILE   True if file exists and is not empty.
-w FILE   True if the file is writable by you.
-x FILE   True if the file is executable by you

Full list is on the bash terminal:  help test
Or the man page: man test

STRING TESTS
------------

-z STRING True if string is empty.
-n STRING True if string is not empty.
STRING1 = STRING2
True if the strings are equal.
STRING1 != STRING2
True if the strings are not equal

Arithmetic Operators
--------------------
arg1 –eq arg2 True if arg1 is equal to arg2.
arg1 –ne arg2 True if arg1 is not equal to arg2.
arg1 –lt arg2 True if arg1 is less than arg2.
arg1 –le arg2 True if arg1 is less than or equal to arg2.
arg1 –gt arg2 True if arg1 is greater than arg2.
arg1 –ge arg2 True if arg1 is greater than or
equal to arg2.


IF-Then statements
------------------

if [ condition-is-true ]
then
command 1
command 2
command N
fi

EXAMPLE:
if [ "$MY_SHELL" = "bash" ]
then
echo "You seem to like the bash shell."
fi

IF-ELSE (or if then else)
-------------------------
EXAMPLE:

if [ condition-is-true ]
then
command N
else
command N
fi


IF-ELIF-ELSE
------------
EXAMPLE:

if [ condition-is-true ]
then
command N
elif [ condition-is-true ]
then
command N
else
command N
fi
